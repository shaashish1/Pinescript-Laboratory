//@version=4
study("Bubbles Indicator", overlay=false, precision=2)
// author: capissimo

// This is a Bubbles indicator, where bubbles are based upon the Bollinger bands. It is aimed to show squeezes and bursts. 
// The Indicator is combined with a Sinusoid and a PPO divergence factors, both of which confirm an up/down move.

//*** Functions
scaler(x, p) => (x - lowest(x, p)) / (highest(x, p) - lowest(x, p))

//*** Inputs
prix  = input(close, "Price Data")
pdmn  = input(6,     "Bollinger Bands Lookback Window", minval=2)  //7, 5
mult  = input(2.,    "StdDev Multiplier", minval=1.0, step=0.1) //3
pcci  = input(5,     "CCI Lookback Window", minval=1)
p     = input(2,     "Lookback Window for Sinusoid", minval=1)
alpha = input(0.6,   "Alpha", minval=0.5, maxval=1, step=0.01)
fast  = input(1,     "RSI Fast Lookback (5)", minval=1)
slow  = input(2,     "RSI Slow Lookback (14)", minval=1)
repnt = input(false, "Repaint?")

//*** Main
price   = security(syminfo.tickerid, timeframe.period, repnt ? prix : prix[1], lookahead=barmerge.lookahead_on)
de_mean = price - sma(price, pdmn) / pdmn 
uplo    = stdev(de_mean, pdmn) * mult

plot(0.5, color=color.gray)
fill(plot(scaler(uplo, pdmn), transp=100), plot(scaler(-uplo, pdmn), transp=100), color=color.gray, transp=70)

// Sinusoid
inter = timeframe.multiplier <= 5 ? timeframe.multiplier * 6 : timeframe.multiplier <= 60 ? timeframe.multiplier * 4 : timeframe.multiplier 
smo   = ema(price, p)
a     = rsi(smo, p)
b     = 0.0, b := change(alpha*a+(1-alpha)*nz(b[1],a), p)
cci   = scaler(cci(price, pcci), pdmn)

plot(scaler(b, inter), color=color.silver, transp=0)
plot(1, color=cci>.90 ? color.green : na, linewidth=3, transp=0)
plot(0, color=cci<.10 ? color.red : na, linewidth=3, transp=0)

// PPO Divergence
up_fast    = rma(max(change(price), 0), fast)
down_fast  = rma(-min(change(price), 0), fast)
rsi_fast   = down_fast == 0 ? 100 : up_fast == 0 ? 0 : 100 - (100 / (1 + up_fast / down_fast))
up_slow    = rma(max(change(price), 0), slow)
down_slow  = rma(-min(change(price), 0), slow)
rsi_slow   = down_slow == 0 ? 100 : up_slow == 0 ? 0 : 100 - (100 / (1 + up_slow / down_slow))
divergence = scaler(rsi_fast - rsi_slow, 60)

plot(divergence, color = divergence > 0.5 ? color.lime : color.red, linewidth=2)
